name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov

      - name: Run tests
        run: |
          pytest tests/ -v --cov=. 

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Lambda deployment package and upload to S3
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          bash build-lambda.sh

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        env:
          TF_VAR_s3_bucket_name: ${{ secrets.S3_BUCKET }}
          TF_VAR_gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        env:
          TF_VAR_s3_bucket_name: ${{ secrets.S3_BUCKET }}
          TF_VAR_gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Deployment Complete
        run: echo "âœ… Lambda function deployed successfully!"